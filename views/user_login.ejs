<!DOCTYPE html>
<html>
<script src="https://code.jquery.com/jquery-3.3.1.js" integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60=" crossorigin="anonymous"></script>

  <style>
    html {
      height: 100%;
      width: 100%;
    }

    body {
      background-color: #F1F1F1;
      height: 100%;
      width: 100%;
      margin: 0;
    }

    form {
      height: 100%;
      width: 100%;
    }

    table {
      height: 100%;
      width: 100%;
    }

    tbody {
      height: 100%;
      width: 100%;
    }

    td {
      padding: 0;
    }

    .banner {
      height: 50%;
      width: 100%;
    }

    form h4 {
      font-size: 32px;
      color: #333333;
      font-family: Roboto, arial, sans-serif;
      display: block;
      text-align: center;
      margin-top: 20px;
    }

    .floating-input {
      padding: 10px;
      display: block;
      width: 300px;
      margin: 30px auto;
    }

    .floating-input label {
      position: absolute;
      font-family: Roboto, arial, sans-serif;
      color: #757575;
      font-size: 18px;
      margin-top: -30px;
      transition: all .2s cubic-bezier(0.4, 0, 0.2, 1);
      cursor: text;
      margin-left: 0;
      display: block;
    }

    .floating-input input {
      border: none;
      border-bottom: 1px solid #757575;
      outline: none;
      width: 300px;
      padding: 5px 0;
      font-size: 18px;
      transition: all .2s cubic-bezier(0.4, 0, 0.2, 1);
      background-color: transparent;
    }

    .floating-input input:valid+label {
      margin-top: -50px;
      font-size: 12px;
      color: #555555;
    }

    .floating-input input:focus {
      border-bottom: 1px solid #2A9AF2;
      box-shadow: 0px 1px 0px 0px #2A9AF2;
    }

    .floating-input input:focus+label {
      margin-top: -50px !important;
      color: #2A9AF2 !important;
      font-size: 12px !important;
    }

    .input-button>input[type="submit"] {
      background-color: #2A9AF2;
      border: none;
      color: #FFFFFF;
      border-radius: 3px;
      width: 100px;
      box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.37);
      padding: 10px;
      margin: 0 auto;
      display: block;
      cursor: pointer;
      outline: none;
      transition: box-shadow 0.28s cubic-bezier(0.4, 0, 0.2, 1);
    }

    input[type="submit"]:hover {
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
    }

    .input-button {
      width: 100px;
      margin: 0 auto;
      position: relative;
      cursor: pointer;
    }

    .input-button:active {
      transform: translate(0px, 5px);
      -webkit-transform: translate(0px, 5px); //border-bottom: 1px solid;
    }

    .ripple-container {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      pointer-events: none;
      overflow: hidden;
    }

    .ripple {
      background-color: rgba(255, 255, 255, .6);
      position: absolute;
      z-index: 10;
      border-radius: 100%;
      animation-name: ripple;
      animation-iteration-count: 1;
      animation-duration: .55s;
      width: 10px;
      height: 10px;
      transform: translateX(-50%) translateY(-50%);
      pointer-events: none;
      animation-timing-function: linear;
    }

    @keyframes ripple {
      from {
        width: 0;
        height: 0;
        opacity: 1;
      }
      to {
        width: 300px;
        height: 300px;
        opacity: 0;
      }
    }

    .row {
      vertical-align: top;
    }

    .btn-register,
    .div-register-button {
      vertical-align: top;
      height: 100%;
      width: 100%;
      margin: 0;
      padding: 0;
    }

    .btn-register {
      background-color: white;
      border: 0;
      border-top: 1px solid black;
    }

    h3 {
      text-align: center;
      font-size: 32px;
    }

    h4 {
      text-align: center;
      font-size: 25px;
    }
  </style>
  <title>user_login</title>
</head>

<body>


<!--script>
function checkLoginState() {
  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });
}
  window.fbAsyncInit = function() {
    FB.init({
      appId      : '{216415682421891}',
      cookie     : true,
      xfbml      : true,
      version    : 'v2.8'
    });
      
    FB.AppEvents.logPageView();   
      
  };

  (function(d, s, id){
     var js, fjs = d.getElementsByTagName(s)[0];
     if (d.getElementById(id)) {return;}
     js = d.createElement(s); js.id = id;
     js.src = "https://connect.facebook.net/en_US/sdk.js";
     fjs.parentNode.insertBefore(js, fjs);
   }(document, 'script', 'facebook-jssdk'));

FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
});
</script>

<fb:login-button 
  scope="public_profile,email"
  onlogin="checkLoginState();">
</fb:login-button>
-->


  <form action="<%=loginPostUrl%>" method="post">
    <table>
      <tbody>
        <tr class="banner" style="height: 50%;">
          <td>
            <h3><img src="/OnceADayLogo.png" style="width: 60%;"></h3>
          </td>
        </tr>
        <tr>
          <td>
            <div class="floating-input">
              <input required id='id' type="text" name="<%=idBoxName%>" />
              <label for="id">아이디</label>
            </div>
          </td>
        </tr>
        <tr>
          <td>
            <div class="floating-input">
              <input required id='password' type="password" name="<%=passwordBoxName%>" />
              <label for="password">비밀번호</label>
            </div>
          </td>
        </tr>
        <tr class="row">
          <td>
		<div class="input-button">
              <input type="submit" value="로그인" />
              <div class="ripple-container"></div>
            </div>
          </td>
        </tr>

	<tr>
	<td>
		<a href="/user/facebook/login">FACEBOOK</a>
	</td>
	</tr>	

        <tr class="row-signin">
          <td>
            <div class="div-register-button">
              <button class="btn-register" onclick="registerPageMove()">회원가입</button>
            </div>
          </td>
        </tr>
      </tbody>
    </table>
  </form>
  <script type="text/javascript">
    function registerPageMove() {
      location.href = '<%=registerUrl%>';
    }
  </script>
	</body>
</html>

<!--DOCTYPE html>
<html>
<head>
<title>Facebook Login JavaScript Example</title>
<meta charset="UTF-8">
</head>
<body>
<script>
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else {
      // The person is not logged into your app or we are unable to tell.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
    FB.init({
      appId      : '{216415682421891}',
      cookie     : true,  // enable cookies to allow the server to access 
                          // the session
      xfbml      : true,  // parse social plugins on this page
      version    : 'v2.8' // use graph api version 2.8
    });

    // Now that we've initialized the JavaScript SDK, we call 
    // FB.getLoginStatus().  This function gets the state of the
    // person visiting this page and can return one of three states to
    // the callback you provide.  They can be:
    //
    // 1. Logged into your app ('connected')
    // 2. Logged into Facebook, but not your app ('not_authorized')
    // 3. Not logged into Facebook and can't tell if they are logged into
    //    your app or not.
    //
    // These three cases are handled in the callback function.

    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });

  };


  // Load the SDK asynchronously
(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = 'https://connect.facebook.net/ko_KR/sdk.js#xfbml=1&version=v3.0&appId=216415682421891&autoLogAppEvents=1';
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Successful login for: ' + response.name);
      document.getElementById('status').innerHTML =
        'Thanks for logging in, ' + response.name + '!';
    });
  }
</script>

<!-
  Below we include the Login Button social plugin. This button uses
  the JavaScript SDK to present a graphical Login button that triggers
  the FB.login() function when clicked.
->

<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = 'https://connect.facebook.net/ko_KR/sdk.js#xfbml=1&version=v3.0&appId=216415682421891&autoLogAppEvents=1';
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>


<div class="fb-login-button" data-max-rows="1" data-size="medium" data-button-type="continue_with" data-show-faces="false" data-auto-logout-link="false" data-use-continue-as="false"></div>

<fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
</fb:login-button>

<div id="status">
</div>

</body>

</html>-->
